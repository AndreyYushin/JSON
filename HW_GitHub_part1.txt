GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON - заходим в GitHub, выбираем создать New Repositories, в конструкции выбираем сделать публичным, добавить файл READMI.
 5. Клонировать репозиторий JSON на локальный компьютер - в нашем новом репозитории справа вверху нажимаем кнопку Code, копируем HTTPS код, заходим в Terminal, создаем директорию, в ней пишем команду git clone и подставляем нашу HTTPS ссылку.
 6. Внутри локального JSON создать файл “new.json” - touch new.json
 7. Добавить файл под гит - git add new.json
 8. Закоммитить файл - git commit -m "List"
 9. Отправить файл на внешний GitHub репозиторий - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON - выполнено
 11. Отправить изменения на внешний репозиторий - git add new.json , git status, git commit - m, git push
 12. Создать файл preferences.json - vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON - выполнено
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - vim skills.json выполнено
 15. Отправить сразу 2 файла на внешний репозиторий - git add .
 16. На веб интерфейсе создать файл bug_report.json - внутри нашего JSON нажимаем кнопку Add file ниже выбираем Create new file, прописываем ему имя и формат, нажимаем Commit changes, в появившемся окне выбираем Commit directly to the main branch и нажимаем Commit changes.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - описанно в пункте 16
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON - открываем свой файл, справа нажимаем кнопку Edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе - описанно в пункте 16
 20. Синхронизировать внешний и локальный репозиторий JSON - заходим в Terminal и выполняем команду git pull
